{"version":3,"sources":["../../src/context/theme.context.js","../../src/FilterListHeader.jsx","../../src/context/list.context.js","../../src/FilterListSearchBar.jsx","../../src/FilterListTagGroup.jsx","../../src/FilterListTag.jsx","../../src/FilterListDisplay.jsx","../../src/helpers/filters.js","../../src/FilterList.jsx","App.js","index.js"],"names":["lightTheme","backgroundColor","borderColor","headerBackgroundColor","headerBorderColor","searchBoxBackgroundColor","searchBoxTextColor","searchBoxBorderColor","tagBorderColor","tagTextColor","tagTextColorActive","tagBackgroundColor","tagBackgroundColorActive","darkTheme","ThemeContext","React","ThemeContextProvider","RowStyled","styled","theme","FilterListHeader","props","themeContext","useContext","className","children","PropTypes","string","ListContext","originalListData","currentListData","selectedTags","searchBarEntry","updateSearchBarEntry","updateSelectedTags","ListContextProvider","FormControlStyled","FilterListSearchBar","listContext","xs","sm","md","placeholder","value","onChange","event","FilterListTagGroup","child","parentTheme","Span","selected","FilterListTag","useState","onClick","setState","prevState","state","displayName","FilterListDisplay","renderComponent","i","emptyComponent","components","datum","key","lg","isRequired","searchTermFilter","p","s","item","tagFilter","t","tags","Array","console","ContainerStyled","FilterList","propertyMap","SEARCH_PROPERTY_NAME","TAGS_PROPERTY_NAME","selectedTheme","filters","currentTags","Set","fluid","listData","keywordSearchProperty","tagsListProperty","heroData","heroName","superpowers","App","map","power","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f360658d.chunk.js","sourcesContent":["import React from 'react'\n\nconst light = '#f8f9fa'\nconst white = '#fff'\nconst grey = '#6c757d'\nconst pattensBlue = '#dee2e6'\nconst pattensBlueDark = '#b2b5b8'\nconst dark = '#343a40'\nconst dark2 = '#464e56'\n\nexport const lightTheme = {\n  backgroundColor: light,\n  borderColor: pattensBlue,\n  headerBackgroundColor: 'initial',\n  headerBorderColor: pattensBlue,\n  searchBoxBackgroundColor: white,\n  searchBoxTextColor: dark,\n  searchBoxBorderColor: pattensBlueDark,\n  tagBorderColor: pattensBlueDark,\n  tagTextColor: grey,\n  tagTextColorActive: light,\n  tagBackgroundColor: white,\n  tagBackgroundColorActive: grey\n}\n\nexport const darkTheme = {\n  backgroundColor: dark,\n  borderColor: dark2,\n  headerBackgroundColor: 'initial',\n  headerBorderColor: dark2,\n  searchBoxBackgroundColor: dark2,\n  searchBoxTextColor: pattensBlue,\n  searchBoxBorderColor: grey,\n  tagBorderColor: pattensBlueDark,\n  tagTextColor: pattensBlueDark,\n  tagTextColorActive: dark,\n  tagBackgroundColor: dark2,\n  tagBackgroundColorActive: pattensBlue\n}\n\nconst ThemeContext = React.createContext(lightTheme)\n\nexport const ThemeContextProvider = ThemeContext.Provider\nexport default ThemeContext\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport ThemeContext from './context/theme.context'\nimport Row from 'react-bootstrap/Row'\n\nconst RowStyled = styled(Row)`\n  background-color: ${({ theme }) => theme.headerBackgroundColor};\n  border-bottom: ${({ theme }) => `solid ${theme.headerBorderColor} 1px`};\n`\n\nconst FilterListHeader = (props) => {\n  const { children, theme } = props\n  const themeContext = useContext(ThemeContext)\n\n  return (\n    <RowStyled\n      theme={{ ...themeContext, ...theme }}\n      className='FilterListHeader align-items-center rounded-top p-3'\n    >\n      {children}\n    </RowStyled>\n  )\n}\n\nFilterListHeader.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element\n  ]),\n  theme: PropTypes.shape({\n    headerBackgroundColor: PropTypes.string,\n    headerBorderColor: PropTypes.string\n  })\n}\n\nFilterListHeader.defaultValues = {\n  children: null,\n  theme: null\n}\n\nexport default FilterListHeader\n","import React from 'react'\n\nconst ListContext = React.createContext({\n  originalListData: [],\n  currentListData: [],\n  selectedTags: new Set(),\n  searchBarEntry: '',\n\n  // eslint-disable-next-line prettier/prettier\n  updateSearchBarEntry: () => { },\n\n  // eslint-disable-next-line prettier/prettier\n  updateSelectedTags: () => { }\n})\n\nexport const ListContextProvider = ListContext.Provider\nexport default ListContext\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport ThemeContext from './context/theme.context'\nimport ListContext from './context/list.context'\nimport Col from 'react-bootstrap/Col'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst FormControlStyled = styled(FormControl)`\n  background-color: ${({ theme }) => theme.searchBoxBackgroundColor};\n  color: ${({ theme }) => theme.searchBoxTextColor};\n  border: ${({ theme }) => `solid ${theme.searchBoxBorderColor} 1px`};\n\n  transition: all 0.2s ease-in-out;\n\n  &:focus {\n    background-color: ${({ theme }) => theme.searchBoxBackgroundColor};\n    color: ${({ theme }) => theme.searchBoxTextColor};\n    opacity: 1;\n    box-shadow: ${({ theme }) => `${theme.searchBoxBorderColor} 0 0 8px 0px`};\n    border-color: ${({ theme }) => theme.searchBoxBorderColor};\n  }\n`\n\nconst FilterListSearchBar = (props) => {\n  const { children, theme } = props\n\n  const listContext = useContext(ListContext)\n  const themeContext = useContext(ThemeContext)\n\n  const handleSearchBarChange = (event) => {\n    const value = event.target.value\n    listContext.updateSearchBarEntry(value)\n  }\n\n  return (\n    <Col className='FilterListSearchBar' xs={12} sm={5} md={3}>\n      <InputGroup>\n        <FormControlStyled\n          placeholder={children ?? 'Search'}\n          value={listContext.searchBarValue}\n          onChange={handleSearchBarChange}\n          theme={{ ...themeContext, ...theme }}\n        />\n      </InputGroup>\n    </Col>\n  )\n}\n\nFilterListSearchBar.propTypes = {\n  children: PropTypes.string,\n  theme: PropTypes.shape({\n    searchBoxBackgroundColor: PropTypes.string,\n    searchBoxTextColor: PropTypes.string,\n    searchBoxBorderColor: PropTypes.string\n  })\n}\n\nFilterListSearchBar.defaultValues = {\n  children: 'Search',\n  theme: null\n}\n\nexport default FilterListSearchBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Col from 'react-bootstrap/Col'\n\nconst FilterListTagGroup = (props) => {\n  const { children, theme } = props\n  return (\n    <Col className='FilterListTagGroup pt-3 p-sm-0'>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            ...child.props,\n            parentTheme: theme\n          })\n        }\n\n        return child\n      })}\n    </Col>\n  )\n}\n\nFilterListTagGroup.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element)\n  ]),\n  theme: PropTypes.shape({\n    tagBorderColor: PropTypes.string,\n    tagTextColor: PropTypes.string,\n    tagTextColorActive: PropTypes.string,\n    tagBackgroundColor: PropTypes.string,\n    tagBackgroundColorActive: PropTypes.string\n  })\n}\n\nFilterListTagGroup.default = {\n  children: null,\n  theme: null\n}\n\nexport default FilterListTagGroup\n","import React, { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport ListContext from './context/list.context'\nimport ThemeContext from './context/theme.context'\n\nconst Span = styled.span`\n  --padding-y: 0.25em;\n  --padding-x: 0.75em;\n  --padding-growth-factor: 1.3;\n\n  border: solid darkgrey 1px;\n  background-color: ${({ theme, selected }) =>\n    selected ? theme.tagBackgroundColorActive : theme.tagBackgroundColor};\n  color: ${({ theme, selected }) =>\n    selected ? theme.tagTextColorActive : theme.tagTextColor};\n\n  padding: var(--padding-y) var(--padding-x);\n  font-weight: ${({ selected }) => (selected ? 'bold' : 'initial')};\n  border-radius: 1rem;\n  text-align: center;\n  white-space: nowrap;\n  font-size: 80%;\n  user-select: none;\n\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    cursor: pointer;\n    padding: calc(var(--padding-y) * var(--padding-growth-factor))\n      calc(var(--padding-x) * var(--padding-growth-factor));\n  }\n`\n\nconst FilterListTag = (props) => {\n  const { displayName, value, parentTheme, theme } = props\n\n  const listContext = useContext(ListContext)\n  const themeContext = useContext(ThemeContext)\n  const [state, setState] = useState({\n    selected: false\n  })\n\n  const toggleFilterTag = () => {\n    const { selected } = state\n    listContext.updateSelectedTags(value ?? displayName, !selected)\n\n    setState((prevState) => ({\n      ...prevState,\n      selected: !prevState.selected\n    }))\n  }\n\n  return (\n    <Span\n      className='m-1'\n      onClick={toggleFilterTag}\n      theme={{ ...themeContext, ...parentTheme, ...theme }}\n      selected={state.selected}\n    >\n      {displayName}\n    </Span>\n  )\n}\n\nFilterListTag.propTypes = {\n  displayName: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  theme: PropTypes.shape({\n    tagBorderColor: PropTypes.string,\n    tagTextColor: PropTypes.string,\n    tagTextColorActive: PropTypes.string,\n    tagBackgroundColor: PropTypes.string,\n    tagBackgroundColorActive: PropTypes.string\n  })\n}\n\nFilterListTag.defaultValues = {\n  value: null,\n  theme: null\n}\n\nexport default FilterListTag\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport ListContext from './context/list.context'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst FilterListDisplay = (props) => {\n  const { renderComponent } = props\n  const listContext = useContext(ListContext)\n  const { currentListData } = listContext\n\n  let i = 0\n  const emptyComponent = (\n    <Col className='mt-3 mx-auto text-center'>No Results</Col>\n  )\n  const components = currentListData.map((datum) => (\n    <Col className='FilterListItem my-3' key={i++}>\n      {renderComponent(datum)}\n    </Col>\n  ))\n\n  return (\n    <Row xs={1} sm={2} md={3} lg={4} className='FilterListDisplay px-5'>\n      {components.length ? components : emptyComponent}\n    </Row>\n  )\n}\n\nFilterListDisplay.propTypes = {\n  renderComponent: PropTypes.func.isRequired\n}\n\nexport default FilterListDisplay\n","/**\n * Creates a predicate to filter on based on a given property name and search term\n * @param {searchProperty} p The property name of each item that should be searched on\n * @param {searchTerm} s The search term being used\n */\nexport const searchTermFilter = (p, s) => {\n  return (item) => item[p].includes(s)\n}\n\n/**\n * Creates a predicate to filter on based on a given property name and set of selected tags\n * @param {tagProperty} p The property name of each item containing the tags to search on\n * @param {selectedTags} t The set of tags that are currently selected\n */\nexport const tagFilter = (p, t) => {\n  return (item) => {\n    // No tags selected ==> Show all results\n    if (t.size === 0) {\n      return true\n    }\n\n    // Make sure tags have the right type\n    let tags = item[p]\n    if (typeof tags === 'string') {\n      tags = tags.split(' ')\n    } else if (!Array.isArray(tags)) {\n      console.warn(\n        'Filtering by tags will only work if the provided data contains a \"tags\" property or an appropriate mapping in the \"propertyMap\" prop'\n      )\n      return true\n    }\n\n    for (let i = 0; i < tags.length; ++i) {\n      if (t.has(tags[i])) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport {\n  ThemeContextProvider,\n  darkTheme,\n  lightTheme\n} from './context/theme.context'\nimport { ListContextProvider } from './context/list.context'\nimport FilterListDisplay from './FilterListDisplay'\nimport * as filters from './helpers/filters'\nimport Container from 'react-bootstrap/Container'\n\nconst ContainerStyled = styled(Container)`\n  background-color: ${({ theme }) => theme.backgroundColor};\n  border: ${({ theme }) => `solid ${theme.borderColor} 1px`};\n  color: ${({ theme }) => theme.searchBoxText};\n`\n\nconst FilterList = (props) => {\n  const { listData, renderComponent, children, theme, propertyMap } = props\n  const SEARCH_PROPERTY_NAME = propertyMap?.keywordSearchProperty ?? 'key'\n  const TAGS_PROPERTY_NAME = propertyMap?.tagsListProperty ?? 'tags'\n\n  let selectedTheme = null\n  if (theme === 'dark') {\n    selectedTheme = darkTheme\n  } else {\n    selectedTheme = { ...lightTheme, ...theme }\n  }\n\n  const [state, setState] = useState({\n    // The original set of data provided by the user\n    originalListData: listData,\n\n    // Data currently being displayed to the user\n    currentListData: new Array(...listData),\n\n    // List of currently selected tags\n    selectedTags: new Set(),\n\n    searchBarEntry: '',\n\n    // Filters the data based on a search term\n    updateSearchBarEntry: (searchBarEntry) => {\n      setState((prevState) => ({\n        ...prevState,\n        currentListData: prevState.originalListData\n          .filter(\n            filters.searchTermFilter(SEARCH_PROPERTY_NAME, searchBarEntry)\n          )\n          .filter(\n            filters.tagFilter(TAGS_PROPERTY_NAME, prevState.selectedTags)\n          ),\n        searchBarEntry: searchBarEntry\n      }))\n    },\n\n    // Filters the data based on selected tags\n    updateSelectedTags: (tagName, selected) => {\n      setState((prevState) => {\n        const currentTags = new Set(prevState.selectedTags)\n        if (selected) {\n          currentTags.add(tagName)\n        } else {\n          currentTags.delete(tagName)\n        }\n\n        return {\n          ...prevState,\n          currentListData: prevState.originalListData\n            .filter(\n              filters.searchTermFilter(\n                SEARCH_PROPERTY_NAME,\n                prevState.searchBarEntry\n              )\n            )\n            .filter(filters.tagFilter(TAGS_PROPERTY_NAME, currentTags)),\n          selectedTags: currentTags\n        }\n      })\n    }\n  })\n\n  return (\n    <ListContextProvider value={state}>\n      <ThemeContextProvider value={selectedTheme}>\n        <ContainerStyled\n          theme={selectedTheme}\n          className='FilterList rounded'\n          fluid='lg'\n        >\n          {/* Optional header component */}\n          {children}\n\n          {/* Internal component for displaying list */}\n          <FilterListDisplay renderComponent={renderComponent} />\n        </ContainerStyled>\n      </ThemeContextProvider>\n    </ListContextProvider>\n  )\n}\n\nFilterList.propTypes = {\n  renderComponent: PropTypes.func.isRequired,\n  listData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  children: PropTypes.element,\n  propertyMap: PropTypes.shape({\n    keywordSearchProperty: PropTypes.string,\n    tagsListProperty: PropTypes.string\n  }),\n  theme: PropTypes.oneOfType([\n    PropTypes.oneOf(['light', 'dark']),\n    PropTypes.shape({\n      backgroundColor: PropTypes.string,\n      borderColor: PropTypes.string\n    })\n  ])\n}\n\nFilterList.defaultProps = {\n  children: null,\n  theme: 'light',\n  propertyMap: {\n    keywordSearchProperty: 'key',\n    tagsListProperty: 'tags'\n  }\n}\n\nexport default FilterList\n","import React, { useState } from 'react'\nimport './index.css'\n\nimport {\n  FilterList,\n  FilterListSearchBar,\n  FilterListTagGroup,\n  FilterListTag,\n  FilterListHeader\n} from 'react-filter-list'\n\nconst heroData = [\n  { heroName: 'Superman', superpowers: ['Flying', 'Strength', 'Speed'] },\n  { heroName: 'Spiderman', superpowers: ['Climbing', 'Strength'] },\n  { heroName: 'Aquaman', superpowers: ['Swimming'] },\n  { heroName: 'Batman', superpowers: ['Intelligence', 'Alfred'] },\n  { heroName: 'The Flash', superpowers: ['Speed', 'Intelligence'] }\n]\n\nconst App = () => {\n  const [state, setState] = useState('dark')\n  const toggleTheme = () => {\n    setState((prevState) => (prevState === 'dark' ? null : 'dark'))\n  }\n\n  // The render function is used to generate each list item\n  // based on the data passed to the FilterList component's\n  // 'listData' prop\n  const renderFunc = ({ heroName, superpowers }) => (\n    <div className='border border-secondary rounded bg-light'>\n      <div className='rounded-top bg-primary text-center p-2'>\n        <h1 className='heroName'>{heroName}</h1>\n      </div>\n      <div className='p-3'>\n        <strong>Powers:</strong>\n        <ul className='m-0'>\n          {superpowers.map((power) => (\n            <li>{power}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n\n  // By default the search and tag functionality\n  // will look at the 'key' and 'tags' properties\n  // of your data for keyword and tag filtering.\n  // However, these property names can be overridden\n  // with the 'propertyMap' prop (as shown below)\n  const mapping = {\n    keywordSearchProperty: 'heroName',\n    tagsListProperty: 'superpowers'\n  }\n\n  return (\n    <div className='App p-5 bg-secondary'>\n      <div className='text-center mb-5'>\n        <h1 className='display-1 text-dark'>Superheros</h1>\n        <button className='btn btn-info' onClick={toggleTheme}>\n          Toggle Light/Dark Theme\n        </button>\n      </div>\n\n      <FilterList\n        theme={state}\n        propertyMap={mapping}\n        renderComponent={renderFunc}\n        listData={heroData}\n      >\n        <FilterListHeader>\n          <FilterListSearchBar>What are you looking for?</FilterListSearchBar>\n          <FilterListTagGroup>\n            <FilterListTag displayName='Flying' />\n            <FilterListTag displayName='Strength' />\n            <FilterListTag displayName='Climbing' />\n            <FilterListTag displayName='Swimming' />\n            <FilterListTag displayName='Speed' />\n          </FilterListTagGroup>\n        </FilterListHeader>\n      </FilterList>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}